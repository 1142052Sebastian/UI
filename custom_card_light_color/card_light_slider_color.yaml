card_light_slider_color:
  template:
    - ulm_language_variables
  variables:
    ulm_card_light_slider_name: "[[[ return entity.attributes.friendly_name ]]]"
    ulm_card_light_icon: 
  show_icon: false
  show_name: false
  show_label: false
  state:
    - operator: template
      value: "[[[ return entity.state == 'on' ]]]"
      styles:
        card:
          - background-color: >
              [[[
                if (states['sun.sun'].state == "below_horizon"){
                  var color = entity.attributes.rgb_color;
                  if (color){
                     return 'rgba(' + entity.attributes.rgb_color + ',0.1)'
                  }
                  else{
                    return 'rgba(var(--color-yellow),0.1)'
                  } 
                }else if (states['sun.sun'].state == "above_horizon")
                  return 'rgba(var(--color-background-yellow),var(--opacity-bg))';
              ]]]
  styles:
    grid:
      - grid-template-areas: '"item1" "item2"'
      - grid-template-columns: 1fr
      - grid-template-rows: min-content min-content
      - row-gap: 12px
    card:
      - border-radius: var(--border-radius)
      - box-shadow: var(--box-shadow)
      - padding: 12px
  custom_fields:
    item1:
      card:
        type: 'custom:button-card'
        entity: '[[[ return entity.entity_id ]]]'
        variables:
          ulm_card_light_name: "[[[ return variables.ulm_card_light_name ]]]"
          ulm_card_light_icon: "[[[ return variables.ulm_card_light_icon ]]]"
        template:
          - icon_info_light
          - auto_color
    item2:
      card: ## delete when you don't want the collapse function
        type: 'custom:my-slider'
        entity: '[[[ return entity.entity_id ]]]'
        radius: 14px
        height: 42px
        mainSliderColor: >
            [[[ 
                var color = entity.attributes.rgb_color;
                if (color){
                   return 'rgba(' + entity.attributes.rgb_color + ',1)'
                }
                else{
                  return 'rgba(var(--color-yellow),1)'
                } 
            ]]]
        secondarySliderColor: >
            [[[ 
                var color = entity.attributes.rgb_color;
                if (color){
                   return 'rgba(' + entity.attributes.rgb_color + ',0.2)';
                }
                else{
                  return 'rgba(var(--color-yellow),0.2)';
                } 
            ]]]
        mainSliderColorOff: rgba(var(--color-theme),0.05)
        secondarySliderColorOff: rgba(var(--color-theme),0.05)
        thumbHorizontalPadding: '0px'
        thumbVerticalPadding: '0px'   
        thumbWidth: 0px
        card_mod:
        style: |
          ha-card {
            border-radius: 14px;
            box-shadow: none;
          }
                    
