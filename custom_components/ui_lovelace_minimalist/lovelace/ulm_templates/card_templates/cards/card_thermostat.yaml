---
### Card Thermostat ###
card_thermostat:
  template:
    - "ulm_language_variables"
  variables:
    ulm_card_thermostat_name: "[[[ return entity.attributes.friendly_name ]]]"
    ulm_card_thermostat_icon: "[[[ return 'mdi:thermometer' ]]]"
    ulm_card_thermostat_enable_collapse: false
    ulm_card_thermostat_enable_controls: false
    ulm_card_thermostat_enable_hvac_modes: false
    ulm_card_thermostat_enable_background_color: false
    # ulm_card_thermostat_enable_popup: false
  show_icon: false
  show_name: false
  show_label: false
  # hold_action:
  #   action: >
  #     [[[
  #         if (variables.ulm_card_thermostat_enable_popup){
  #           return 'fire-dom-event'
  #         }
  #         else{
  #           return 'more-info'
  #         }
  #     ]]]
  #   browser_mod:
  #     command: "popup"
  #     large: true
  #     hide_header: true
  #     card:
  #       type: "custom:button-card"
  #       template: "popup_light_brightness"
  #       variables:
  #         ulm_popup_light_entity: "[[[ return entity.entity_id ]]]"
  state:
    - operator: "template"
      value: >
        [[[
          return (entity.attributes.hvac_action == 'heating' && variables.ulm_card_thermostat_enable_background_color)
        ]]]
      styles:
        card:
          - background-color: "rgba(var(--color-yellow),1)"
    - operator: "template"
      value: >
        [[[
          return (entity.attributes.hvac_action == 'cooling' && variables.ulm_card_thermostat_enable_background_color)
        ]]]
      styles:
        card:
          - background-color: "rgba(var(--color-blue),1)"
    - operator: "template"
      value: >
        [[[
          return entity.state != 'off'
        ]]]
      styles:
        card:
          - background-color: "rgba(var(--color-background-yellow),var(--opacity-bg))"
  styles:
    grid:
      - grid-template-areas: >
          [[[
                var areas = [];
                areas.push("item1");
                if ((variables.ulm_card_thermostat_enable_collapse && entity.state == "off") ||  variables.ulm_card_thermostat_enable_controls) {
                    areas.push("item2");
                }
                if ((variables.ulm_card_thermostat_enable_collapse && entity.state == "off") ||  variables.ulm_card_thermostat_enable_hvac_modes) {
                    areas.push("item3");
                }
                return "\"" + areas.join("\" \"") + "\"";
          ]]]
      - grid-template-columns: "1fr"
      - grid-template-rows: >
          [[[
                var rows = [];
                rows.push("min-content");
                if ((variables.ulm_card_thermostat_enable_collapse && entity.state == "off") ||  variables.ulm_card_thermostat_enable_controls) {
                    rows.push("min-content");
                }
                if ((variables.ulm_card_thermostat_enable_collapse && entity.state == "off") ||  variables.ulm_card_thermostat_enable_hvac_modes) {
                    rows.push("min-content");
                }
                return rows.join(" ");
          ]]]
      - row-gap: "12px"
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      - padding: "12px"
    custom_fields:
      item2:
        - display: >
            [[[
                  if ((variables.ulm_card_thermostat_enable_collapse && entity.state == "off") ||  !variables.ulm_card_thermostat_enable_controls) {
                      return "none";
                  } else {
                      return "block";
                  }
            ]]]
      item3:
        - display: >
            [[[
                  if ((variables.ulm_card_thermostat_enable_collapse && entity.state == "off") ||  !variables.ulm_card_thermostat_enable_hvac_modes) {
                      return "none";
                  } else {
                      return "block";
                  }
            ]]]
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        # entity: "climate.netatmo_salon" #####
        template:
          - "icon_more_info"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              entity: "[[[ return entity.entity_id ]]]"
              icon: "[[[ return variables.ulm_card_thermostat_icon ]]]"
              #             hold_action:
              #               action: >
              #                 [[[
              #                     if (variables.ulm_card_thermostat_enable_popup){
              #                       return 'fire-dom-event'
              #                     }
              #                     else{
              #                       return 'more-info'
              #                     }
              #                 ]]]
              #               browser_mod:
              #                 command: "popup"
              #                 large: true
              #                 hide_header: true
              #                 card:
              #                   type: "custom:button-card"
              #                   template: "popup_light_brightness"
              #                   variables:
              #                     ulm_popup_light_entity: "[[[ return entity.entity_id ]]]"
              state:
                - operator: "template"
                  value: >
                    [[[
                      return entity.state != 'off'
                    ]]]
                  styles:
                    icon:
                      - color: "rgba(var(--color-red),1)"
                    img_cell:
                      - background-color: "rgba(var(--color-red),0.2)"
          item2:
            card:
              type: "custom:button-card"
              entity: "[[[ return entity.entity_id ]]]"
              name: "[[[ return variables.ulm_card_thermostat_name ]]]"
              #             hold_action:
              #               action: >
              #                 [[[
              #                     if (variables.ulm_card_thermostat_enable_popup){
              #                       return 'fire-dom-event'
              #                     }
              #                     else{
              #                       return 'more-info'
              #                     }
              #                 ]]]
              #               browser_mod:
              #                 command: "popup"
              #                 large: true
              #                 hide_header: true
              #                 card:
              #                   type: "custom:button-card"
              #                   template: "popup_light_brightness"
              #                   variables:
              #                     ulm_popup_light_entity: "[[[ return entity.entity_id ]]]"
              label: >- ##### A REVOIR
                [[[
                    var label = variables.ulm_off ;
                    if (entity.state =='off'){
                      label = variables.ulm_off ;
                    }else if (entity.state == 'heat'){
                      label = variables.ulm_heat ;
                    }else if (entity.state == 'cool'){
                      label = variables.ulm_cool ;
                    }else{
                      label = variables.ulm_idle;
                    }
                    if(entity.attributes.temperature){
                      return (entity.attributes.current_temperature ) + '°' + ' • ' + label + ' (' + entity.attributes.hvac_action + ')';
                    }
                    return label; 
                ]]]
              state:
                - operator: "template"
                  value: >
                    [[[
                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color
                    ]]]
                  styles:
                    name:
                      - color: "var(--card-background-color)"
                    label:
                      - color: "var(--card-background-color)"
    item2:
      card:
        type: "custom:button-card"
        template: "list_3_items"
        styles:
          card:
            - background: "none"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              entity: "[[[ return entity.entity_id ]]]"
              icon: "mdi:minus"
              tap_action:
                action: "call-service"
                service: "climate.set_temperature"
                service_data:
                  temperature: "[[[ return (parseFloat(states[entity.entity_id].attributes.temperature) - 0.5)  ]]]"
                  entity_id: "[[[ return entity.entity_id ]]]"
              state:
                - operator: "template"
                  value: >
                    [[[
                      return (entity.attributes.hvac_action == 'heating' && variables.ulm_card_thermostat_enable_background_color)
                    ]]]
                  styles:
                    card:
                      - background-color: "rgba(var(--color-theme),0.15)"
                - operator: "template"
                  value: >
                    [[[
                      return (entity.attributes.hvac_action == 'cooling' && variables.ulm_card_thermostat_enable_background_color)
                    ]]]
                  styles:
                    card:
                      - background-color: "rgba(255, 255, 255, 0.15)" ###
                    icon:
                      - color: "rgba(var(--card-background-color),0.9)"
          item2:
            card:
              type: "custom:button-card"
              show_icon: false
              show_name: false
              show_label: true
              entity: "[[[ return entity.entity_id ]]]"
              label: |-
                [[[
                    var temperature = entity.attributes.temperature;
                    if (temperature == null) {
                      var temperature = '-';
                    }
                    return temperature + '°C'
                ]]]
              styles:
                card:
                  - background: "none"
                  - box-shadow: "none"
              state:
                - operator: "template"
                  value: >
                    [[[
                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color
                    ]]]
                  styles:
                    card:
                      - color: "var(--card-background-color)"
          item3:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              entity: "[[[ return entity.entity_id ]]]"
              icon: "mdi:plus"
              tap_action:
                action: "call-service"
                service: "climate.set_temperature"
                service_data:
                  temperature: "[[[ return (parseFloat(states[entity.entity_id].attributes.temperature) + 0.5)  ]]]"
                  entity_id: "[[[ return entity.entity_id ]]]"
              state:
                - operator: "template"
                  value: >
                    [[[
                      return (entity.attributes.hvac_action == 'heating' && variables.ulm_card_thermostat_enable_background_color)
                    ]]]
                  styles:
                    card:
                      - background-color: "rgba(var(--color-theme),0.15)"
                - operator: "template"
                  value: >
                    [[[
                      return (entity.attributes.hvac_action == 'cooling' && variables.ulm_card_thermostat_enable_background_color)
                    ]]]
                  styles:
                    card:
                      - background-color: "rgba(255, 255, 255, 0.15)" ###
                    icon:
                      - color: "rgba(var(--card-background-color),0.9)"
    item3:
      card:
        type: "custom:vertical-stack-in-card" ##########
        horizontal: true ##########
        cards:
          - type: "custom:button-card"
            template: "widget_icon"
            icon: "mdi:fire"
            tap_action:
              action: "call-service"
              service: "climate.set_hvac_mode"
              service_data:
                entity_id: "[[[ return entity.entity_id ]]]"
                hvac_mode: "heat"
            styles:
              icon:
                - color: |
                    [[[
                      var color = 'rgba(var(--color-theme), 1)';
                      if (entity.state == "heat"){
                        var color = 'rgba(var(--color-red), 1)';
                      }
                      return color;
                    ]]]
              card:
                - background-color: |
                    [[[
                      var bc_color = 'rgba(var(--color-theme),0.05)';
                      if (entity.state == "heat"){
                        var bc_color = 'rgba(var(--color-red), 0.2)';
                      }
                      return bc_color;
                    ]]]
                - display: >
                    [[[
                      if (states[entity.entity_id].attributes.hvac_modes.includes("heat")) {
                          return "block";
                      } else {
                          return "none";
                      }
                    ]]]
        card_mod: ############
          style: |
            ha-card {
              background: none;
              box-shadow: none;
            }

  # template:
  #   - "icon_info_bg"
  #   - "ulm_language_variables"
  # hold_action:
  #   action: "more-info"
  # label: >-
  #   [[[
  #       if (entity.state =='off'){
  #         var etat = variables.ulm_off ;
  #       }else if (entity.state == 'heat'){
  #         var etat = variables.ulm_heat ;
  #       }else if (entity.state == 'cool'){
  #         var etat = variables.ulm_cool ;
  #       }else{
  #         var etat = variables.ulm_idle;
  #       }
  #       if(entity.attributes.temperature){
  #         return (entity.attributes.temperature ) + '°' + ' • ' + etat ;
  #       }else{
  #         return etat ;
  #       }
  #   ]]]
  # icon: "mdi:thermometer"
  # state:
  #   - operator: "template"
  #     value: >
  #       [[[
  #         return entity.state == 'heat'
  #       ]]]
  #     styles:
  #       icon:
  #         - color: "rgba(var(--color-red),1)"
  #       img_cell:
  #         - background-color: "rgba(var(--color-red),0.2)"
  #       card:
  #         - background-color: "rgba(var(--color-background-red),var(--opacity-bg))"
  #       name:
  #         - color: "rgba(var(--color-red-text),1)"
  #       label:
  #         - color: "rgba(var(--color-red-text),1)"
